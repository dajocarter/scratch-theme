@charset "UTF-8";
/*! normalize.css v5.0.0 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Change the default font family in all browsers (opinionated).
 * 2. Correct the line height in all browsers.
 * 3. Prevent adjustments of font size after orientation changes in
 *    IE on Windows Phone and in iOS.
 */
/* Document
   ========================================================================== */
@import url("//fonts.googleapis.com/css?family=Alegreya:400,400i,700|Alegreya+Sans:300,300i,400,400i,700");
html {
  font-family: sans-serif;
  /* 1 */
  line-height: 1.15;
  /* 2 */
  -ms-text-size-adjust: 100%;
  /* 3 */
  -webkit-text-size-adjust: 100%;
  /* 3 */
}

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0;
}

/**
 * Add the correct display in IE 9-.
 */
article,
aside,
footer,
header,
nav,
section {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in IE.
 */
figcaption,
figure,
main {
  /* 1 */
  display: block;
}

/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px;
}

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a, body.login div#login p#nav a, body.login div#login p#backtoblog a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */
}

/**
 * Remove the outline on focused links when they are also active or hovered
 * in all browsers (opinionated).
 */
a:active, body.login div#login p#nav a:active, body.login div#login p#backtoblog a:active,
a:hover,
body.login div#login p#nav a:hover,
body.login div#login p#backtoblog a:hover {
  outline-width: 0;
}

/**
 * 1. Remove the bottom border in Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */
}

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit;
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic;
}

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000;
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
audio,
video {
  display: inline-block;
}

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none;
}

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden;
}

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button, body.login div#login form#loginform p.submit input#wp-submit, body.login div#login form#registerform p.submit input#wp-submit, body.login div#login form#lostpasswordform p.submit input#wp-submit,
input,
optgroup,
select,
textarea {
  font-family: sans-serif;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button, body.login div#login form#loginform p.submit input#wp-submit, body.login div#login form#registerform p.submit input#wp-submit, body.login div#login form#lostpasswordform p.submit input#wp-submit,
input {
  /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button, body.login div#login form#loginform p.submit input#wp-submit, body.login div#login form#registerform p.submit input#wp-submit, body.login div#login form#lostpasswordform p.submit input#wp-submit,
select {
  /* 1 */
  text-transform: none;
}

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button, body.login div#login form#loginform p.submit input#wp-submit, body.login div#login form#registerform p.submit input#wp-submit, body.login div#login form#lostpasswordform p.submit input#wp-submit,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner, body.login div#login form#loginform p.submit input#wp-submit::-moz-focus-inner, body.login div#login form#registerform p.submit input#wp-submit::-moz-focus-inner, body.login div#login form#lostpasswordform p.submit input#wp-submit::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring, body.login div#login form#loginform p.submit input#wp-submit:-moz-focusring, body.login div#login form#registerform p.submit input#wp-submit:-moz-focusring, body.login div#login form#lostpasswordform p.submit input#wp-submit:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Change the border, margin, and padding in all browsers (opinionated).
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

/**
 * 1. Add the correct display in IE 9-.
 * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 */
details,
menu {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/* Scripting
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
canvas {
  display: inline-block;
}

/**
 * Add the correct display in IE.
 */
template {
  display: none;
}

/* Hidden
   ========================================================================== */
/**
 * Add the correct display in IE 10-.
 */
[hidden] {
  display: none;
}

.aqua {
  color: #7fdbff;
}

.aqua-bg {
  background-color: #7fdbff;
}

.blue {
  color: #0074d9;
}

.blue-bg {
  background-color: #0074d9;
}

.navy {
  color: #001f3f;
}

.navy-bg {
  background-color: #001f3f;
}

.teal {
  color: #39cccc;
}

.teal-bg {
  background-color: #39cccc;
}

.green {
  color: #2ecc40;
}

.green-bg {
  background-color: #2ecc40;
}

.olive {
  color: #3d9970;
}

.olive-bg {
  background-color: #3d9970;
}

.lime {
  color: #01ff70;
}

.lime-bg {
  background-color: #01ff70;
}

.yellow {
  color: #ffdc00;
}

.yellow-bg {
  background-color: #ffdc00;
}

.orange {
  color: #ff851b;
}

.orange-bg {
  background-color: #ff851b;
}

.red {
  color: #ff4136;
}

.red-bg {
  background-color: #ff4136;
}

.fuchsia {
  color: #f012be;
}

.fuchsia-bg {
  background-color: #f012be;
}

.purple {
  color: #b10dc9;
}

.purple-bg {
  background-color: #b10dc9;
}

.maroon {
  color: #85144b;
}

.maroon-bg {
  background-color: #85144b;
}

.white {
  color: #fff;
}

.white-bg {
  background-color: #fff;
}

.gray {
  color: #eee;
}

.gray-bg {
  background-color: #eee;
}

.silver {
  color: #ccc;
}

.silver-bg {
  background-color: #ccc;
}

.black {
  color: #000;
}

.black-bg {
  background-color: #000;
}

body {
  color: #000;
  font-family: "Helvetica Neue", "Helvetica", "Arial", sans-serif;
  font-size: 16px;
  line-height: 1.5;
}

h1,
.h1 {
  font-family: "Georgia", "Times", "Times New Roman", serif;
  font-size: 1.95312em;
  font-weight: bold;
  line-height: 2;
  margin-bottom: 1rem;
  margin-top: 4rem;
}

h2,
.h2 {
  font-family: "Georgia", "Times", "Times New Roman", serif;
  font-size: 1.5625em;
  font-weight: bold;
  line-height: 1.5;
  margin-bottom: 0.5rem;
  margin-top: 2.5rem;
}

h3,
.h3 {
  font-family: "Georgia", "Times", "Times New Roman", serif;
  font-size: 1.5625em;
  font-weight: bold;
  line-height: 1;
  margin-bottom: 0.5rem;
  margin-top: 2rem;
}

h4,
.h4 {
  font-family: "Georgia", "Times", "Times New Roman", serif;
  font-size: 1.5625em;
  font-weight: bold;
  line-height: 1;
  margin-bottom: 0.5rem;
  margin-top: 1.5rem;
}

h5,
.h5 {
  font-family: "Georgia", "Times", "Times New Roman", serif;
  font-size: 1.25em;
  font-weight: bold;
  line-height: 1;
  margin-bottom: 0.5rem;
  margin-top: 2.5rem;
}

h6,
.h6 {
  font-family: "Georgia", "Times", "Times New Roman", serif;
  font-size: 1.25em;
  font-weight: bold;
  line-height: 1;
  margin-bottom: 0.5rem;
  margin-top: 2.5rem;
}

h1 + h2,
.h1 + .h2 {
  margin-top: 1.5rem;
}

h2 + h3,
.h2 + .h3,
h3 + h4,
.h3 + .h4,
h4 + h5,
.h4 + .h5 {
  margin-top: 0.75rem;
}

h5 + h6,
.h5 + .h6 {
  margin-top: 0.5rem;
}

p {
  margin: 0 0 0.75em;
}

hr {
  border-bottom: 1px solid #000;
  border-left: 0;
  border-right: 0;
  border-top: 0;
  display: block;
  height: 1px;
  margin: 1.5em 0;
  padding: 0;
}

blockquote {
  background: #eee;
  border-left: 0.25rem solid #ccc;
  margin: 1.5em 0;
  padding: 1.5em 0.75em;
  position: relative;
  quotes: "“" "”";
}

blockquote::before {
  color: #ccc;
  content: open-quote;
  font-size: 4rem;
  position: absolute;
  top: -34px;
}

blockquote p {
  display: inline;
}

cite {
  display: block;
  font-style: normal;
}

small,
.small {
  font-size: 70%;
  line-height: 1.5;
}

code,
kbd,
pre,
samp,
.code {
  background-color: #eee;
  border: 1px solid #ccc;
  border-radius: 4px;
  color: #000;
  font-size: 16px;
  line-height: 1.4;
  padding: 1px 3px;
}

code,
kbd,
samp,
.code {
  display: inline-block;
  vertical-align: middle;
}

pre,
.pre {
  display: block;
  margin-bottom: 1.5em;
  margin-left: auto;
  margin-right: auto;
  margin-top: 1.5em;
  overflow-x: auto;
  padding: 8px 12px 10px;
}

br.mbr {
  display: none;
  visibility: hidden;
}

html {
  background-color: #fff;
  box-sizing: border-box;
  color: #000;
  font-size: 16px;
  line-height: 1.5;
}

*, *::before, *::after {
  box-sizing: inherit;
}

html,
body {
  height: 100%;
}

main {
  padding-top: 72px;
}

::-moz-selection {
  background: white;
  text-shadow: none;
}

::selection {
  background: white;
  text-shadow: none;
}

.hidden {
  display: none !important;
}

.visuallyhidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

.visuallyhidden.focusable:active, .visuallyhidden.focusable:focus {
  clip: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  position: static;
  width: auto;
}

.invisible {
  visibility: hidden;
}

.browserupgrade {
  background: #ccc;
  color: #000;
  margin: 0.2em 0;
  padding: 0.2em 0;
}

.tweek-bg {
  background-position: center center;
  background-repeat: no-repeat;
  background-size: cover;
  height: 200px;
}

.white-popup {
  background: #fff;
  margin: 1rem auto;
  max-width: 700px;
  padding: 20px;
  position: relative;
  width: auto;
}

.acf-map {
  border: #eee solid 1px;
  height: 400px;
  margin: 20px 0;
  width: 100%;
}

.gm-style img {
  max-width: none;
}

.overlay {
  background-color: rgba(0, 0, 0, 0.4);
  height: 100%;
  position: relative;
  width: 100%;
}

.circle {
  border-radius: 50%;
}

.clearfix::after {
  clear: both;
  content: "";
  display: block;
}

.hpad {
  padding-left: 1rem;
  padding-right: 1rem;
}

.vpad {
  padding-bottom: 1rem;
  padding-top: 1rem;
}

.hpad-2x {
  padding-left: 1rem;
  padding-right: 1rem;
}

.vpad-2x {
  padding-bottom: 1rem;
  padding-top: 1rem;
}

.hpad-3x {
  padding-left: 1rem;
  padding-right: 1rem;
}

.vpad-3x {
  padding-bottom: 1rem;
  padding-top: 1rem;
}

.pad {
  padding: 1rem;
}

.pad-2x {
  padding: 2rem;
}

.pad-3x {
  padding: 3rem;
}

.left {
  text-align: left;
}

.center {
  text-align: center;
}

.right {
  text-align: right;
}

.alignleft {
  margin: 1rem auto;
}

.aligncenter {
  clear: both;
  margin: 1rem auto;
}

.alignright {
  margin: 1rem auto;
}

.halign {
  left: 50%;
  position: absolute;
  transform: translateX(-50%);
}

.valign-always {
  margin-bottom: 0;
  margin-top: 0;
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
}

.hvalign {
  left: 50%;
  margin-bottom: 0;
  margin-top: 0;
  position: absolute;
  top: 50%;
  transform: translate(-50%, -50%);
}

body.login div#login h1 a, body.login div#login h1 p#nav a, body.login div#login p#nav h1 a, body.login div#login h1 p#backtoblog a, body.login div#login p#backtoblog h1 a {
  background-image: url("../img/login-logo.svg");
  background-position: center center;
  background-repeat: no-repeat;
  background-size: contain;
  padding-bottom: 49px;
  width: 100%;
  height: 100%;
}

body.login div#login form#loginform p label, body.login div#login form#registerform p label, body.login div#login form#lostpasswordform p label {
  color: #000;
  font-family: "Georgia", "Times", "Times New Roman", serif;
  font-weight: 700;
}

@media (min-width: 768px){
  br.brm{
    display: none;
    visibility: hidden;
  }
  br.mbr{
    display: block;
    visibility: visible;
  }
  .alignleft{
    float: left;
    margin: 0 1rem 1rem 0;
  }
  .alignright{
    float: right;
    margin: 0 0 1rem 1rem;
  }
  .valign{
    margin-bottom: 0;
    margin-top: 0;
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
